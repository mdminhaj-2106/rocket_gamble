<% layout('layouts/main') -%>

<div class="container py-5">
  <!-- Winners Header -->
  <div class="row">
    <div class="col-12 text-center mb-5">
      <div class="winners-header fade-in">
        <div class="fireworks-container">
          <div class="firework"></div>
          <div class="firework"></div>
          <div class="firework"></div>
        </div>
        
        <h1 class="display-2 font-orbitron text-gradient mb-4 winner-title">
          <i class="fas fa-crown fa-2x me-3"></i>
          FINAL CHAMPIONS
        </h1>
        
        <p class="lead text-light mb-4 winner-subtitle">
          The ultimate rocket betting legends have been crowned!
        </p>
        
        <div class="celebration-banner">
          <div class="confetti"></div>
          <div class="confetti"></div>
          <div class="confetti"></div>
          <div class="confetti"></div>
          <div class="confetti"></div>
        </div>
      </div>
    </div>
  </div>

  <!-- Grand Winner (1st Place) -->
  <div class="row mb-5">
    <div class="col-12">
      <div class="grand-winner-card">
        <div class="card card-glass winner-card-gold">
          <div class="card-body p-5 text-center">
            <div class="grand-winner-crown mb-4">
              <i class="fas fa-crown fa-4x text-warning"></i>
              <div class="crown-sparkles">
                <i class="fas fa-star sparkle-1"></i>
                <i class="fas fa-star sparkle-2"></i>
                <i class="fas fa-star sparkle-3"></i>
                <i class="fas fa-star sparkle-4"></i>
              </div>
            </div>
            
            <h2 class="display-4 font-orbitron text-warning mb-3 champion-name">
              <%= winners[0]?.name || 'Champion' %>
            </h2>
            
            <div class="grand-prize mb-4">
              <h3 class="text-light mb-2">GRAND CHAMPION</h3>
              <div class="prize-amount">
                <i class="fas fa-coins fa-2x text-warning me-3"></i>
                <span class="display-3 text-gradient prize-number">
                  <%= winners[0]?.credits?.toLocaleString() || '0' %>
                </span>
                <span class="h4 text-light ms-2">CREDITS</span>
              </div>
            </div>
            
            <div class="winner-stats">
              <div class="row">
                <div class="col-md-4">
                  <div class="stat-box">
                    <i class="fas fa-trophy fa-2x text-warning mb-2"></i>
                    <h5 class="text-light">1st Place</h5>
                    <small class="text-muted">Ultimate Winner</small>
                  </div>
                </div>
                <div class="col-md-4">
                  <div class="stat-box">
                    <i class="fas fa-chart-line fa-2x text-success mb-2"></i>
                    <h5 class="text-light">₹<%= winners[0]?.totalWinnings?.toLocaleString() || '0' %></h5>
                    <small class="text-muted">Total Winnings</small>
                  </div>
                </div>
                <div class="col-md-4">
                  <div class="stat-box">
                    <i class="fas fa-medal fa-2x text-info mb-2"></i>
                    <h5 class="text-light">Hall of Fame</h5>
                    <small class="text-muted">Legend Status</small>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Top Winners Grid -->
  <div class="row">
    <div class="col-12">
      <h2 class="text-center text-gradient mb-5">
        <i class="fas fa-trophy me-2"></i>Top <%= winners.length %> Champions
      </h2>
    </div>
  </div>

  <div class="row winners-grid">
    <% winners.forEach((winner, index) => { %>
      <div class="col-lg-6 col-xl-4 mb-4">
        <div class="winner-card position-<%= index + 1 %>" data-rank="<%= index + 1 %>">
          <div class="card card-glass h-100 winner-item">
            <div class="card-header bg-transparent border-0 text-center">
              <div class="winner-rank-badge rank-<%= index + 1 %>">
                <span class="rank-number">#<%= index + 1 %></span>
                <div class="rank-icon">
                  <% if (index === 0) { %>
                    <i class="fas fa-crown text-warning"></i>
                  <% } else if (index === 1) { %>
                    <i class="fas fa-medal text-silver"></i>
                  <% } else if (index === 2) { %>
                    <i class="fas fa-medal text-bronze"></i>
                  <% } else { %>
                    <i class="fas fa-star text-info"></i>
                  <% } %>
                </div>
              </div>
            </div>
            
            <div class="card-body text-center p-4">
              <div class="winner-avatar mb-3">
                <div class="avatar-circle position-<%= index + 1 %>">
                  <i class="fas fa-user fa-2x"></i>
                </div>
              </div>
              
              <h4 class="winner-name text-light mb-3">
                <%= winner.name %>
              </h4>
              
              <div class="winner-credits mb-3">
                <div class="credits-display position-<%= index + 1 %>">
                  <i class="fas fa-coins me-2"></i>
                  <span class="credits-amount" data-credits="<%= winner.credits %>">0</span>
                </div>
              </div>
              
              <div class="winner-details">
                <div class="detail-item">
                  <span class="detail-label">Total Winnings:</span>
                  <span class="detail-value text-success">₹<%= winner.totalWinnings?.toLocaleString() || '0' %></span>
                </div>
                <div class="detail-item">
                  <span class="detail-label">Achievement:</span>
                  <span class="detail-value text-warning">
                    <% if (index === 0) { %>
                      <i class="fas fa-crown me-1"></i>Grand Champion
                    <% } else if (index === 1) { %>
                      <i class="fas fa-medal me-1"></i>Silver Legend
                    <% } else if (index === 2) { %>
                      <i class="fas fa-medal me-1"></i>Bronze Hero
                    <% } else { %>
                      <i class="fas fa-star me-1"></i>Elite Player
                    <% } %>
                  </span>
                </div>
              </div>
              
              <div class="winner-badge mt-3">
                <% if (index < 3) { %>
                  <span class="badge bg-gradient-<%= index === 0 ? 'warning' : index === 1 ? 'light' : 'bronze' %> px-3 py-2">
                    <i class="fas fa-trophy me-1"></i>
                    <% if (index === 0) { %>CHAMPION<% } else if (index === 1) { %>RUNNER-UP<% } else { %>3RD PLACE<% } %>
                  </span>
                <% } else { %>
                  <span class="badge bg-primary px-3 py-2">
                    <i class="fas fa-star me-1"></i>TOP <%= index + 1 %>
                  </span>
                <% } %>
              </div>
            </div>
          </div>
        </div>
      </div>
    <% }); %>
  </div>

  <!-- Game Complete Actions -->
  <div class="row mt-5">
    <div class="col-12">
      <div class="card card-glass">
        <div class="card-body p-5 text-center">
          <h3 class="text-gradient mb-4">
            <i class="fas fa-flag-checkered me-2"></i>
            Game Complete!
          </h3>
          
          <p class="lead text-light mb-4">
            Thank you for playing the ultimate rocket betting experience!
          </p>
          
          <div class="final-actions">
            <div class="row justify-content-center">
              <div class="col-md-3 col-sm-6 mb-3">
                <button class="btn btn-outline-light btn-lg w-100" onclick="shareResults()">
                  <i class="fas fa-share me-2"></i>
                  Share Results
                </button>
              </div>
              <div class="col-md-3 col-sm-6 mb-3">
                <button class="btn btn-outline-info btn-lg w-100" onclick="downloadCertificate()">
                  <i class="fas fa-certificate me-2"></i>
                  Get Certificate
                </button>
              </div>
              <div class="col-md-3 col-sm-6 mb-3">
                <a href="/game/leaderboard" class="btn btn-outline-warning btn-lg w-100">
                  <i class="fas fa-list me-2"></i>
                  Final Leaderboard
                </a>
              </div>
              <div class="col-md-3 col-sm-6 mb-3">
                <button class="btn btn-gradient btn-lg w-100" onclick="playAgain()">
                  <i class="fas fa-redo me-2"></i>
                  Play Again
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
/* Fireworks Animation */
.fireworks-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 200px;
  pointer-events: none;
  overflow: hidden;
}

.firework {
  position: absolute;
  width: 6px;
  height: 6px;
  border-radius: 50%;
  animation: firework 2s infinite;
}

.firework:nth-child(1) {
  left: 20%;
  background: #ff6b6b;
  animation-delay: 0s;
}

.firework:nth-child(2) {
  left: 50%;
  background: #4ecdc4;
  animation-delay: 0.7s;
}

.firework:nth-child(3) {
  left: 80%;
  background: #ffd93d;
  animation-delay: 1.4s;
}

@keyframes firework {
  0% { 
    transform: translateY(100px) scale(1);
    opacity: 1;
  }
  50% { 
    transform: translateY(0) scale(2);
    opacity: 0.7;
  }
  100% { 
    transform: translateY(-50px) scale(0);
    opacity: 0;
  }
}

/* Confetti Animation */
.confetti {
  position: absolute;
  width: 10px;
  height: 10px;
  background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
  animation: confetti-fall 3s infinite linear;
}

.confetti:nth-child(1) { left: 10%; animation-delay: 0s; }
.confetti:nth-child(2) { left: 30%; animation-delay: 0.5s; background: linear-gradient(45deg, #ffd93d, #ff9ff3); }
.confetti:nth-child(3) { left: 50%; animation-delay: 1s; background: linear-gradient(45deg, #54a0ff, #5f27cd); }
.confetti:nth-child(4) { left: 70%; animation-delay: 1.5s; background: linear-gradient(45deg, #00d2d3, #ff9ff3); }
.confetti:nth-child(5) { left: 90%; animation-delay: 2s; background: linear-gradient(45deg, #ff6348, #ffb142); }

@keyframes confetti-fall {
  0% { 
    transform: translateY(-100px) rotate(0deg);
    opacity: 1;
  }
  100% { 
    transform: translateY(100vh) rotate(360deg);
    opacity: 0;
  }
}

/* Winners Header */
.winners-header {
  position: relative;
  padding: 50px 0;
  background: radial-gradient(circle at center, rgba(255, 215, 0, 0.1) 0%, transparent 70%);
}

.winner-title {
  text-shadow: 0 0 30px rgba(255, 215, 0, 0.5);
  animation: titleGlow 3s ease-in-out infinite;
}

@keyframes titleGlow {
  0%, 100% { text-shadow: 0 0 30px rgba(255, 215, 0, 0.5); }
  50% { text-shadow: 0 0 50px rgba(255, 215, 0, 0.8), 0 0 80px rgba(255, 215, 0, 0.4); }
}

/* Grand Winner Card */
.grand-winner-card {
  position: relative;
  margin-bottom: 50px;
}

.winner-card-gold {
  background: linear-gradient(135deg, 
    rgba(255, 215, 0, 0.2) 0%, 
    rgba(255, 193, 7, 0.1) 50%, 
    rgba(255, 215, 0, 0.2) 100%);
  border: 3px solid #ffd700;
  box-shadow: 0 0 50px rgba(255, 215, 0, 0.3);
  animation: goldGlow 2s ease-in-out infinite;
}

@keyframes goldGlow {
  0%, 100% { box-shadow: 0 0 50px rgba(255, 215, 0, 0.3); }
  50% { box-shadow: 0 0 80px rgba(255, 215, 0, 0.6), 0 0 120px rgba(255, 215, 0, 0.2); }
}

.grand-winner-crown {
  position: relative;
  animation: crownBounce 3s ease-in-out infinite;
}

@keyframes crownBounce {
  0%, 100% { transform: translateY(0px) rotate(0deg); }
  50% { transform: translateY(-15px) rotate(5deg); }
}

.crown-sparkles {
  position: absolute;
  top: -20px;
  left: -20px;
  right: -20px;
  bottom: -20px;
  pointer-events: none;
}

.crown-sparkles i {
  position: absolute;
  color: #ffd700;
  animation: sparkle 2s infinite;
}

.sparkle-1 { top: 10%; left: 10%; animation-delay: 0s; }
.sparkle-2 { top: 10%; right: 10%; animation-delay: 0.5s; }
.sparkle-3 { bottom: 10%; left: 10%; animation-delay: 1s; }
.sparkle-4 { bottom: 10%; right: 10%; animation-delay: 1.5s; }

@keyframes sparkle {
  0%, 100% { opacity: 0; transform: scale(0); }
  50% { opacity: 1; transform: scale(1.2); }
}

.prize-amount {
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 20px 0;
}

.prize-number {
  font-weight: bold;
  text-shadow: 0 0 20px rgba(255, 215, 0, 0.5);
}

/* Winner Cards */
.winner-card {
  transition: all 0.3s ease;
  opacity: 0;
  transform: translateY(50px);
}

.winner-card:hover {
  transform: translateY(-10px) scale(1.02);
}

.winner-rank-badge {
  position: relative;
  width: 80px;
  height: 80px;
  margin: 0 auto;
  border-radius: 50%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  border: 3px solid;
  margin-top: -40px;
}

.rank-1 {
  background: linear-gradient(135deg, #ffd700, #ffed4e);
  border-color: #ffd700;
  color: #000;
  box-shadow: 0 0 30px rgba(255, 215, 0, 0.5);
}

.rank-2 {
  background: linear-gradient(135deg, #c0c0c0, #e8e8e8);
  border-color: #c0c0c0;
  color: #000;
  box-shadow: 0 0 30px rgba(192, 192, 192, 0.5);
}

.rank-3 {
  background: linear-gradient(135deg, #cd7f32, #daa520);
  border-color: #cd7f32;
  color: #000;
  box-shadow: 0 0 30px rgba(205, 127, 50, 0.5);
}

.winner-card[data-rank="1"], .winner-card[data-rank="2"], .winner-card[data-rank="3"] {
  border: 2px solid;
}

.winner-card[data-rank="1"] { border-color: #ffd700; }
.winner-card[data-rank="2"] { border-color: #c0c0c0; }
.winner-card[data-rank="3"] { border-color: #cd7f32; }

.avatar-circle {
  width: 70px;
  height: 70px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0 auto;
  border: 3px solid;
}

.avatar-circle.position-1 {
  background: linear-gradient(135deg, #ffd700, #ffed4e);
  border-color: #ffd700;
  color: #000;
}

.avatar-circle.position-2 {
  background: linear-gradient(135deg, #c0c0c0, #e8e8e8);
  border-color: #c0c0c0;
  color: #000;
}

.avatar-circle.position-3 {
  background: linear-gradient(135deg, #cd7f32, #daa520);
  border-color: #cd7f32;
  color: #000;
}

.credits-display {
  padding: 15px 20px;
  border-radius: 25px;
  font-size: 1.5rem;
  font-weight: bold;
  margin: 20px 0;
}

.credits-display.position-1 {
  background: linear-gradient(135deg, rgba(255, 215, 0, 0.3), rgba(255, 193, 7, 0.2));
  border: 2px solid #ffd700;
  color: #ffd700;
}

.credits-display.position-2 {
  background: linear-gradient(135deg, rgba(192, 192, 192, 0.3), rgba(169, 169, 169, 0.2));
  border: 2px solid #c0c0c0;
  color: #c0c0c0;
}

.credits-display.position-3 {
  background: linear-gradient(135deg, rgba(205, 127, 50, 0.3), rgba(184, 115, 51, 0.2));
  border: 2px solid #cd7f32;
  color: #cd7f32;
}

.detail-item {
  display: flex;
  justify-content: space-between;
  margin-bottom: 10px;
  padding: 5px 0;
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.detail-label {
  color: rgba(255, 255, 255, 0.7);
  font-size: 0.9rem;
}

.detail-value {
  font-weight: bold;
}

/* Custom badge colors */
.bg-gradient-bronze {
  background: linear-gradient(135deg, #cd7f32, #daa520) !important;
}

.text-silver { color: #c0c0c0; }
.text-bronze { color: #cd7f32; }

/* Responsive adjustments */
@media (max-width: 768px) {
  .winner-title {
    font-size: 2.5rem !important;
  }
  
  .prize-amount {
    flex-direction: column;
    gap: 10px;
  }
  
  .prize-number {
    font-size: 2.5rem !important;
  }
  
  .winner-rank-badge {
    width: 60px;
    height: 60px;
    margin-top: -30px;
  }
  
  .avatar-circle {
    width: 50px;
    height: 50px;
  }
  
  .credits-display {
    font-size: 1.2rem;
    padding: 10px 15px;
  }
  
  .final-actions .row > div {
    margin-bottom: 15px;
  }
}

/* Loading animation for credits */
.credits-loading {
  animation: pulse 1.5s ease-in-out infinite;
}

@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.5; }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Initialize entrance animations
  initializeAnimations();
  
  // Animate credits counting
  setTimeout(() => {
    animateCreditsCount();
  }, 1500);
  
  // Add celebration effects
  setTimeout(() => {
    addCelebrationEffects();
  }, 2000);
});

function initializeAnimations() {
  // Hero section animation
  gsap.timeline()
    .from('.winner-title', {
      opacity: 0,
      y: -50,
      duration: 1.2,
      ease: "bounce.out"
    })
    .from('.winner-subtitle', {
      opacity: 0,
      y: 30,
      duration: 0.8
    }, '-=0.6');

  // Grand winner card animation
  gsap.from('.grand-winner-card', {
    opacity: 0,
    scale: 0.8,
    duration: 1.5,
    ease: "back.out(1.7)",
    delay: 0.5
  });

  // Winner cards stagger animation
  gsap.to('.winner-card', {
    opacity: 1,
    y: 0,
    duration: 0.8,
    stagger: 0.2,
    ease: "power2.out",
    delay: 1
  });

  // Final actions animation
  gsap.from('.final-actions', {
    opacity: 0,
    y: 50,
    duration: 1,
    delay: 2
  });
}

function animateCreditsCount() {
  const creditsElements = document.querySelectorAll('.credits-amount');
  
  creditsElements.forEach((element, index) => {
    const targetValue = parseInt(element.getAttribute('data-credits'));
    const duration = 2 + (index * 0.3); // Stagger the counting
    
    element.classList.add('credits-loading');
    
    gsap.to({ value: 0 }, {
      value: targetValue,
      duration: duration,
      ease: "power2.out",
      delay: index * 0.2,
      onUpdate: function() {
        const currentValue = Math.round(this.targets()[0].value);
        element.textContent = currentValue.toLocaleString();
      },
      onComplete: function() {
        element.classList.remove('credits-loading');
        
        // Add special effect for grand winner
        if (index === 0) {
          gsap.to(element.parentElement, {
            scale: 1.1,
            duration: 0.3,
            yoyo: true,
            repeat: 1,
            ease: "power2.inOut"
          });
        }
      }
    });
  });

  // Animate the grand prize number separately
  const prizeElement = document.querySelector('.prize-number');
  if (prizeElement) {
    const targetValue = parseInt(prizeElement.textContent.replace(/,/g, ''));
    
    gsap.to({ value: 0 }, {
      value: targetValue,
      duration: 3,
      ease: "power2.out",
      onUpdate: function() {
        const currentValue = Math.round(this.targets()[0].value);
        prizeElement.textContent = currentValue.toLocaleString();
      }
    });
  }
}

function addCelebrationEffects() {
  // Add hover effects to winner cards
  const winnerCards = document.querySelectorAll('.winner-card');
  
  winnerCards.forEach((card, index) => {
    card.addEventListener('mouseenter', function() {
      gsap.to(this, {
        y: -15,
        scale: 1.05,
        duration: 0.3,
        ease: "power2.out"
      });
      
      // Add special glow for top 3
      if (index < 3) {
        this.style.boxShadow = '0 20px 40px rgba(255, 215, 0, 0.4)';
      }
    });
    
    card.addEventListener('mouseleave', function() {
      gsap.to(this, {
        y: 0,
        scale: 1,
        duration: 0.3,
        ease: "power2.out"
      });
      
      this.style.boxShadow = '';
    });
  });
  
  // Random celebration bursts
  setInterval(() => {
    createCelebrationBurst();
  }, 5000);
}

function createCelebrationBurst() {
  const colors = ['#ff6b6b', '#4ecdc4', '#ffd93d', '#ff9ff3', '#54a0ff'];
  
  for (let i = 0; i < 10; i++) {
    const particle = document.createElement('div');
    particle.style.cssText = `
      position: fixed;
      width: 8px;
      height: 8px;
      background: ${colors[Math.floor(Math.random() * colors.length)]};
      border-radius: 50%;
      pointer-events: none;
      z-index: 9999;
      top: 50%;
      left: 50%;
    `;
    
    document.body.appendChild(particle);
    
    gsap.to(particle, {
      x: (Math.random() - 0.5) * 800,
      y: (Math.random() - 0.5) * 600,
      rotation: Math.random() * 360,
      scale: 0,
      duration: 2,
      ease: "power2.out",
      onComplete: () => particle.remove()
    });
  }
}

// Action functions
async function shareResults() {
  try {
    if (navigator.share) {
      await navigator.share({
        title: 'Rocket Betting Game Results!',
        text: 'Check out the final winners of our epic rocket betting game!',
        url: window.location.href
      });
    } else {
      // Fallback: copy to clipboard
      await navigator.clipboard.writeText(window.location.href);
      showNotification('Results link copied to clipboard!', 'success');
    }
  } catch (error) {
    console.error('Share error:', error);
    showNotification('Unable to share results', 'error');
  }
}

function downloadCertificate() {
  // Create a simple certificate (mock functionality)
  showNotification('Certificate feature coming soon!', 'info');
  
  // In a real implementation, you would generate a PDF certificate
  // using libraries like jsPDF or send a request to a server endpoint
}

async function playAgain() {
  const confirmed = confirm('Start a new game? This will reset all current progress.');
  
  if (confirmed) {
    try {
      showLoading('Starting new game...');
      
      // In a real implementation, you might call an API to reset the game
      showSuccess('Redirecting to new game...');
      
      setTimeout(() => {
        window.location.href = '/game/landing';
      }, 2000);
      
    } catch (error) {
      console.error('Play again error:', error);
      showError('Failed to start new game');
    } finally {
      hideLoading();
    }
  }
}

function showNotification(message, type = 'info') {
  const notification = document.createElement('div');
  notification.className = `alert alert-${type} notification`;
  notification.style.cssText = `
    position: fixed;
    top: 100px;
    right: 20px;
    z-index: 9999;
    min-width: 300px;
    opacity: 0;
    transform: translateX(100%);
  `;
  
  const icons = {
    success: 'fas fa-check-circle',
    error: 'fas fa-exclamation-circle',
    info: 'fas fa-info-circle'
  };
  
  notification.innerHTML = `
    <i class="${icons[type]} me-2"></i>
    ${message}
  `;
  
  document.body.appendChild(notification);
  
  // Animate in
  gsap.to(notification, {
    opacity: 1,
    x: 0,
    duration: 0.5,
    ease: "back.out(1.7)"
  });
  
  // Remove after 4 seconds
  setTimeout(() => {
    gsap.to(notification, {
      opacity: 0,
      x: 100,
      duration: 0.3,
      onComplete: () => notification.remove()
    });
  }, 4000);
}

// Add some extra celebration effects on load
window.addEventListener('load', function() {
  setTimeout(() => {
    // Create victory sound effect (if available)
    try {
      const audio = new Audio('/sounds/victory.mp3');
      audio.volume = 0.3;
      audio.play().catch(() => {}); // Ignore if audio fails
    } catch (e) {}
    
    // Create extra confetti burst
    createCelebrationBurst();
    
    setTimeout(createCelebrationBurst, 1000);
    setTimeout(createCelebrationBurst, 2000);
  }, 3000);
});
</script>
